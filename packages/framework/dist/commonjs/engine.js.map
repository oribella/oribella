{"version":3,"sources":["../../src/engine.js"],"names":[],"mappings":"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","file":"engine.js","sourcesContent":["/*eslint no-cond-assign: 0*/\nimport {Handle} from \"./handle\";\nimport {GESTURE_STARTED, STRATEGY_FLAG, RETURN_FLAG, matchesSelector} from \"./utils\";\n\nvar POINTERS = \"__pointers__\";\n\nexport var ACTION_START = \"start\",\n  ACTION_UPDATE = \"update\",\n  ACTION_END = \"end\",\n  ACTION_CANCEL = \"cancel\";\n\nexport class Engine {\n  constructor(element, registry, isMouse, isValidMouseButton) {\n    this.element = element;\n    this.registry = registry;\n    this.isMouse = isMouse;\n    this.isValidMouseButton = isValidMouseButton;\n    this.flows = [];\n    this.activeFlow = null;\n    this.handles = [];\n    this.gestures = [];\n    this.composedGestures = [];\n  }\n  registerGesture(type, Gesture) {\n    this.registry.register(type, Gesture);\n  }\n  activate() {\n    var stopListeners = [];\n    this.flows.forEach(flow => {\n      stopListeners.push(flow.activate());\n    });\n    return () => {\n      stopListeners.forEach(stop => stop());\n    };\n  }\n  addHandle(element, type, subscriber) {\n    var handle = new Handle(element, type, subscriber);\n\n    this.handles.push(handle);\n\n    return () => {\n      var ix = this.handles.indexOf(handle);\n      if (ix !== -1) {\n        this.handles.splice(ix, 1);\n      }\n    };\n  }\n  addFlow(flow) {\n    this.flows.push(flow);\n    flow.onStart(this.startFlow.bind(this))\n      .onUpdate(this.updateFlow.bind(this))\n      .onCancel(this.cancelFlow.bind(this))\n      .onEnd(this.endFlow.bind(this))\n      .onStop(this.stopFlow.bind(this));\n    return flow;\n  }\n  canActivateFlow(flow) {\n    return (this.activeFlow === null || this.activeFlow === flow);\n  }\n  startFlow(flow, event, allPointers, currentPointers) {\n    if (!this.canActivateFlow(flow)) {\n      return false;\n    }\n\n    this.activeFlow = flow;\n\n    this.gestures = this.gestures\n                      .concat(this.match(event.target))\n                      .sort( (g1, g2) => {\n                        return g1.subscriber.options.prio -\n                          g2.subscriber.options.prio;\n                      });\n\n    if (!this.gestures.length) {\n      return false; //No match don't continue\n    }\n\n    this.processEvent(flow, event, allPointers, currentPointers, ACTION_START);\n\n    return true;\n  }\n  updateFlow(flow, event, allPointers, currentPointers) {\n    this.processEvent(flow, event, allPointers, currentPointers, ACTION_UPDATE);\n  }\n  cancelFlow(flow, event, allPointers, currentPointers) {\n    this.processEvent(flow, event, allPointers, currentPointers, ACTION_CANCEL);\n  }\n  endFlow(flow, event, allPointers, currentPointers) {\n    this.processEvent(flow, event, allPointers, currentPointers, ACTION_END);\n  }\n  stopFlow() {\n    let gestures = this.gestures.slice(),\n      gesture,\n      result;\n\n    while (gesture = gestures.shift()) {\n      result = gesture.unbind();\n      if (result === false) {\n        this.composedGestures.push(gesture);\n      }\n    }\n\n    this.gestures.length = 0;\n    this.activeFlow = null;\n  }\n  removeGesture(gesture, ...arr) {\n    if (gesture[GESTURE_STARTED]) {\n      gesture[ACTION_CANCEL]();\n    }\n    gesture.unbind();\n    let gestures;\n    while (gestures = arr.shift()) {\n      let ix = gestures.indexOf(gesture);\n      if (ix !== -1) {\n        gestures.splice(ix, 1);\n      }\n    }\n  }\n  processEvent(flow, event, allPointers, currentPointers, action) {\n    if (this.activeFlow !== flow) {\n      return;\n    }\n    this.processGestures(event, allPointers, currentPointers, action);\n  }\n  getPointersDelta(event, pointerCount, options) {\n    if (this.isMouse(event) && !this.isValidMouseButton(event, options.which)) {\n      return -1;\n    }\n    return pointerCount - options.touches;\n  }\n  processGestures(event, allPointers, currentPointers, action) {\n    let gestures = this.gestures.slice(),\n      gesture,\n      result,\n      allResult,\n      allPointerCnt = Object.keys(allPointers).length,\n      currentPointerIds = Object.keys(currentPointers),\n      currentPointerCnt = currentPointerIds.length,\n      pointerIx,\n      pointerId,\n      pointerIds,\n      pointerCnt,\n      pointers,\n      hasPointer,\n      removePointers,\n      removeGesture,\n      options;\n\n    while (gesture = gestures.shift()) {\n      hasPointer = false;\n      removePointers = false;\n      removeGesture = false;\n      pointers = gesture[POINTERS];\n      options = gesture.subscriber.options;\n\n      allResult = this.getPointersDelta(event, allPointerCnt, options);\n      if (allResult > 0 && options.strategy & STRATEGY_FLAG.REMOVE_IF_POINTERS_GT){\n        this.removeGesture(gesture, this.gestures, this.composedGestures, gestures);\n        continue;\n      }\n\n      result = this.getPointersDelta(event, currentPointerCnt, options);\n      switch (action) {\n        case ACTION_START:\n          if (result !== 0) {\n            if (allResult === 0) {\n              currentPointers = allPointers;\n            } else {\n              continue;\n            }\n          }\n          if (pointers && Object.keys(pointers).length === currentPointerCnt) {\n            continue;\n          }\n          //Lock pointers for gesture\n          gesture[POINTERS] = pointers = currentPointers;\n          hasPointer = true;\n          break;\n        case ACTION_UPDATE:\n          //Update pointers for gesture\n          pointerIx = 0;\n          while (pointerIx < currentPointerCnt) {\n            pointerId = currentPointerIds[pointerIx];\n            if (pointers && pointers[pointerId]) {\n              pointers[pointerId] = currentPointers[pointerId];\n              hasPointer = true;\n            }\n            ++pointerIx;\n          }\n          break;\n        case ACTION_END:\n          if (!gesture[GESTURE_STARTED]){\n            continue;\n          }\n          pointerIx = 0;\n          while (pointerIx < currentPointerCnt) {\n            pointerId = currentPointerIds[pointerIx];\n            if (pointers && pointers[pointerId]) {\n              hasPointer = true;\n              removePointers = true;\n            }\n            ++pointerIx;\n          }\n          if (pointers && !Object.keys(pointers).length) {\n            hasPointer = true;\n            removeGesture = true;\n          }\n          break;\n        case ACTION_CANCEL:\n          pointers = currentPointers;\n          hasPointer = true;\n          break;\n      }\n      if (!hasPointer) {\n        continue;\n      }\n      //Map pointers to separate object reference\n      const mappedPointers = [];\n      pointerIx = 0;\n      pointerIds = Object.keys(pointers);\n      pointerCnt = pointerIds.length;\n      while (pointerIx < pointerCnt) {\n        mappedPointers.push(pointers[pointerIds[pointerIx]]);\n        ++pointerIx;\n      }\n      this.processGesture(event, mappedPointers, action, gesture, gestures);\n\n      if (removePointers) {\n        pointerIx = 0;\n        while (pointerIx < currentPointerCnt) {\n          pointerId = currentPointerIds[pointerIx];\n          if (pointers[pointerId]) {\n            delete pointers[pointerId];\n          }\n          ++pointerIx;\n        }\n      }\n\n      if (removeGesture) {\n        gesture[POINTERS] = null;\n        gesture[GESTURE_STARTED] = false;\n        this.removeGesture(gesture, this.gestures, this.composedGestures, gestures);\n      }\n    }\n  }\n  processGesture(event, pointers, action, gesture, gestures) {\n    //Call\n    let result = gesture[action](event, pointers);\n    if (result & RETURN_FLAG.STARTED) {\n      gesture[GESTURE_STARTED] = true;\n    }\n\n    //Remove gesture\n    if (result & RETURN_FLAG.REMOVE) {\n      this.removeGesture(gesture, this.gestures, this.composedGestures, gestures);\n    }\n\n    //Remove all other gestures\n    if (result & RETURN_FLAG.REMOVE_OTHERS) {\n      let otherGestures = gestures.slice();\n      let otherGesture;\n      while (otherGesture = otherGestures.shift()) {\n        if (gesture === otherGesture) {\n          continue;\n        }\n        if (otherGesture[GESTURE_STARTED]) {\n          otherGesture[ACTION_CANCEL]();\n        }\n        this.removeGesture(otherGesture, this.gestures, this.composedGestures, gestures);\n      }\n    }\n  }\n  createGesture(handle, element) {\n    var gesture = this.registry.create(handle.type, handle.subscriber, element);\n    gesture.bind(this.addHandle.bind(this), handle.element, this.removeGesture.bind(this, gesture, this.gestures, this.composedGestures), () => { gesture[GESTURE_STARTED] = true; });\n    return gesture;\n  }\n  match(startElement) {\n    let i,\n      handle,\n      element,\n      selector,\n      gesture,\n      gestures = [],\n      matched = false;\n\n    for (element = startElement; element !== this.element; element = element.parentNode) {\n      for (i = 0; i < this.handles.length; ++i) { //Always evaluate length since gestures could bind gestures\n        handle = this.handles[i];\n        selector = handle.subscriber.selector;\n\n        if (!handle.element.contains(element) || (selector && handle.element === element)) {\n          continue;\n        }\n\n        if (!selector && element === handle.element) {\n          matched = true;\n        } else if (selector) {\n          if (matchesSelector(element, selector)) {\n            matched = true;\n          }\n        }\n        if (matched) {\n          while (gesture = this.composedGestures.shift()) {\n            if (gesture.subscriber === handle.subscriber) {\n              break;\n            }\n          }\n          if (!gesture) {\n            gesture = this.createGesture(handle, element);\n          }\n          gestures.push(gesture);\n        }\n      }\n    }\n\n    return gestures;\n  }\n}\n"]}