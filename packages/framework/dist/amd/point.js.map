{"version":3,"sources":["../../src/point.js"],"names":[],"mappings":";;;;;;;;;;;;;MAAa;AACX,aADW,KACX,CAAY,CAAZ,EAAe,CAAf,EAAkB;4BADP,OACO;;AAChB,WAAK,CAAL,GAAS,CAAT,CADgB;AAEhB,WAAK,CAAL,GAAS,CAAT,CAFgB;KAAlB;;AADW,oBAKX,iCAAW,GAAG;AACZ,UAAI,QAAQ,KAAK,CAAL,GAAS,EAAE,CAAF;UACnB,QAAQ,KAAK,CAAL,GAAS,EAAE,CAAF;UACjB,OAAO,KAAK,IAAL,CAAU,QAAQ,KAAR,GAAgB,QAAQ,KAAR,CAAjC,CAHU;;AAKZ,aAAO,IAAP,CALY;;;AALH,oBAYX,qCAAa,GAAG;AACd,UAAI,IAAI,EAAE,CAAF,GAAM,KAAK,CAAL;UACZ,IAAI,EAAE,CAAF,GAAM,KAAK,CAAL;UACV,QAAQ,KAAK,KAAL,CAAW,CAAX,EAAc,CAAd,CAAR;UACA,UAAU,QAAQ,GAAR,GAAc,KAAK,EAAL,CAJZ;AAKd,aAAO,OAAP,CALc;;;AAZL,oBAmBX,yBAAQ;AACN,aAAO,IAAI,KAAJ,CAAU,KAAK,CAAL,EAAQ,KAAK,CAAL,CAAzB,CADM;;;WAnBG","file":"point.js","sourcesContent":["export class Point {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n  distanceTo(p) {\n    var xdist = this.x - p.x,\n      ydist = this.y - p.y,\n      dist = Math.sqrt(xdist * xdist + ydist * ydist);\n\n    return dist;\n  }\n  deltaAngleTo(p) {\n    var x = p.x - this.x,\n      y = p.y - this.y,\n      theta = Math.atan2(y, x),\n      degrees = theta * 180 / Math.PI;\n    return degrees;\n  }\n  clone() {\n    return new Point(this.x, this.y);\n  }\n}\n"]}