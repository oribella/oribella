{"version":3,"sources":["../../src/engine.js"],"names":[],"mappings":"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","file":"engine.js","sourcesContent":["/*eslint no-cond-assign: 0*/\nimport {Handle} from \"./handle\";\nimport {GESTURE_STARTED, STRATEGY_FLAG, RETURN_FLAG, matchesSelector} from \"./utils\";\n\nvar POINTERS = \"__pointers__\";\n\nexport var ACTION_START = \"start\",\n  ACTION_UPDATE = \"update\",\n  ACTION_END = \"end\",\n  ACTION_CANCEL = \"cancel\";\n\nexport class Engine {\n  constructor(element, registry, isMouse, isValidMouseButton) {\n    this.element = element;\n    this.registry = registry;\n    this.isMouse = isMouse;\n    this.isValidMouseButton = isValidMouseButton;\n    this.flows = [];\n    this.activeFlow = null;\n    this.handles = [];\n    this.gestures = [];\n    this.composedGestures = [];\n  }\n  registerGesture(type, Gesture) {\n    this.registry.register(type, Gesture);\n  }\n  activate() {\n    var stopListeners = [];\n    this.flows.forEach(flow => {\n      stopListeners.push(flow.activate());\n    });\n    return () => {\n      stopListeners.forEach(stop => stop());\n    };\n  }\n  addHandle(element, type, subscriber) {\n    var handle = new Handle(element, type, subscriber);\n\n    this.handles.push(handle);\n\n    return () => {\n      var ix = this.handles.indexOf(handle);\n      if (ix !== -1) {\n        this.handles.splice(ix, 1);\n      }\n    };\n  }\n  addFlow(flow) {\n    this.flows.push(flow);\n    flow.onStart(this.startFlow.bind(this))\n      .onUpdate(this.updateFlow.bind(this))\n      .onCancel(this.cancelFlow.bind(this))\n      .onEnd(this.endFlow.bind(this))\n      .onStop(this.stopFlow.bind(this));\n    return flow;\n  }\n  canActivateFlow(flow) {\n    return (this.activeFlow === null || this.activeFlow === flow);\n  }\n  startFlow(flow, event, allPointers, currentPointers) {\n    if (!this.canActivateFlow(flow)) {\n      return false;\n    }\n\n    this.activeFlow = flow;\n\n    this.gestures = this.gestures\n                      .concat(this.match(event.target))\n                      .sort( (g1, g2) => {\n                        return g1.subscriber.options.prio -\n                          g2.subscriber.options.prio;\n                      });\n\n    if (!this.gestures.length) {\n      return false; //No match don't continue\n    }\n\n    this.processEvent(flow, event, allPointers, currentPointers, ACTION_START);\n\n    return true;\n  }\n  updateFlow(flow, event, allPointers, currentPointers) {\n    this.processEvent(flow, event, allPointers, currentPointers, ACTION_UPDATE);\n  }\n  cancelFlow(flow, event, allPointers, currentPointers) {\n    this.processEvent(flow, event, allPointers, currentPointers, ACTION_CANCEL);\n  }\n  endFlow(flow, event, allPointers, currentPointers) {\n    this.processEvent(flow, event, allPointers, currentPointers, ACTION_END);\n  }\n  stopFlow() {\n    let gestures = this.gestures.slice(),\n      gesture,\n      result;\n\n    while (gesture = gestures.shift()) {\n      result = gesture.unbind();\n      if (result === false) {\n        this.composedGestures.push(gesture);\n      }\n    }\n\n    this.gestures.length = 0;\n    this.activeFlow = null;\n  }\n  removeGesture(gesture, ...arr) {\n    if (gesture[GESTURE_STARTED]) {\n      gesture[ACTION_CANCEL]();\n    }\n    gesture.unbind();\n    let gestures;\n    while (gestures = arr.shift()) {\n      let ix = gestures.indexOf(gesture);\n      if (ix !== -1) {\n        gestures.splice(ix, 1);\n      }\n    }\n  }\n  processEvent(flow, event, allPointers, currentPointers, action) {\n    if (this.activeFlow !== flow) {\n      return;\n    }\n    this.processGestures(event, allPointers, currentPointers, action);\n  }\n  getPointersDelta(event, pointerCount, options) {\n    if (this.isMouse(event) && !this.isValidMouseButton(event, options.which)) {\n      return -1;\n    }\n    return pointerCount - options.touches;\n  }\n  processGestures(event, allPointers, currentPointers, action) {\n    let gestures = this.gestures.slice(),\n      gesture,\n      result,\n      allResult,\n      allPointerCnt = Object.keys(allPointers).length,\n      currentPointerIds = Object.keys(currentPointers),\n      currentPointerCnt = currentPointerIds.length,\n      pointerIx,\n      pointerId,\n      pointerIds,\n      pointerCnt,\n      pointers,\n      hasPointer,\n      removePointers,\n      removeGesture,\n      options;\n\n    while (gesture = gestures.shift()) {\n      hasPointer = false;\n      removePointers = false;\n      removeGesture = false;\n      pointers = gesture[POINTERS];\n      options = gesture.subscriber.options;\n\n      allResult = this.getPointersDelta(event, allPointerCnt, options);\n      if (allResult > 0 && options.strategy & STRATEGY_FLAG.REMOVE_IF_POINTERS_GT){\n        this.removeGesture(gesture, this.gestures, this.composedGestures, gestures);\n        continue;\n      }\n\n      result = this.getPointersDelta(event, currentPointerCnt, options);\n      switch (action) {\n        case ACTION_START:\n          if (result !== 0) {\n            if (allResult === 0) {\n              currentPointers = allPointers;\n            } else {\n              continue;\n            }\n          }\n          if (pointers && Object.keys(pointers).length === currentPointerCnt) {\n            continue;\n          }\n          //Lock pointers for gesture\n          gesture[POINTERS] = pointers = currentPointers;\n          hasPointer = true;\n          break;\n        case ACTION_UPDATE:\n          //Update pointers for gesture\n          pointerIx = 0;\n          while (pointerIx < currentPointerCnt) {\n            pointerId = currentPointerIds[pointerIx];\n            if (pointers && pointers[pointerId]) {\n              pointers[pointerId] = currentPointers[pointerId];\n              hasPointer = true;\n            }\n            ++pointerIx;\n          }\n          break;\n        case ACTION_END:\n          if (!gesture[GESTURE_STARTED]){\n            continue;\n          }\n          pointerIx = 0;\n          while (pointerIx < currentPointerCnt) {\n            pointerId = currentPointerIds[pointerIx];\n            if (pointers && pointers[pointerId]) {\n              hasPointer = true;\n              removePointers = true;\n            }\n            ++pointerIx;\n          }\n          if (pointers && !Object.keys(pointers).length) {\n            hasPointer = true;\n            removeGesture = true;\n          }\n          break;\n        case ACTION_CANCEL:\n          pointers = currentPointers;\n          hasPointer = true;\n          break;\n      }\n      if (!hasPointer) {\n        continue;\n      }\n      //Map pointers to separate object reference\n      const mappedPointers = [];\n      pointerIx = 0;\n      pointerIds = Object.keys(pointers);\n      pointerCnt = pointerIds.length;\n      while (pointerIx < pointerCnt) {\n        mappedPointers.push(pointers[pointerIds[pointerIx]]);\n        ++pointerIx;\n      }\n      this.processGesture(event, mappedPointers, action, gesture, gestures);\n\n      if (removePointers) {\n        pointerIx = 0;\n        while (pointerIx < currentPointerCnt) {\n          pointerId = currentPointerIds[pointerIx];\n          if (pointers[pointerId]) {\n            delete pointers[pointerId];\n          }\n          ++pointerIx;\n        }\n      }\n\n      if (removeGesture) {\n        gesture[POINTERS] = null;\n        gesture[GESTURE_STARTED] = false;\n        this.removeGesture(gesture, this.gestures, this.composedGestures, gestures);\n      }\n    }\n  }\n  processGesture(event, pointers, action, gesture, gestures) {\n    //Call\n    let result = gesture[action](event, pointers);\n    if (result & RETURN_FLAG.STARTED) {\n      gesture[GESTURE_STARTED] = true;\n    }\n\n    //Remove gesture\n    if (result & RETURN_FLAG.REMOVE) {\n      this.removeGesture(gesture, this.gestures, this.composedGestures, gestures);\n    }\n\n    //Remove all other gestures\n    if (result & RETURN_FLAG.REMOVE_OTHERS) {\n      let otherGestures = gestures.slice();\n      let otherGesture;\n      while (otherGesture = otherGestures.shift()) {\n        if (gesture === otherGesture) {\n          continue;\n        }\n        if (otherGesture[GESTURE_STARTED]) {\n          otherGesture[ACTION_CANCEL]();\n        }\n        this.removeGesture(otherGesture, this.gestures, this.composedGestures, gestures);\n      }\n    }\n  }\n  createGesture(handle, element) {\n    var gesture = this.registry.create(handle.type, handle.subscriber, element);\n    gesture.bind(this.addHandle.bind(this), handle.element, this.removeGesture.bind(this, gesture, this.gestures, this.composedGestures), () => { gesture[GESTURE_STARTED] = true; });\n    return gesture;\n  }\n  match(startElement) {\n    let i,\n      handle,\n      element,\n      selector,\n      gesture,\n      gestures = [],\n      matched = false;\n\n    for (element = startElement; element !== this.element; element = element.parentNode) {\n      for (i = 0; i < this.handles.length; ++i) { //Always evaluate length since gestures could bind gestures\n        handle = this.handles[i];\n        selector = handle.subscriber.selector;\n\n        if (!handle.element.contains(element) || (selector && handle.element === element)) {\n          continue;\n        }\n\n        if (!selector && element === handle.element) {\n          matched = true;\n        } else if (selector) {\n          if (matchesSelector(element, selector)) {\n            matched = true;\n          }\n        }\n        if (matched) {\n          while (gesture = this.composedGestures.shift()) {\n            if (gesture.subscriber === handle.subscriber) {\n              break;\n            }\n          }\n          if (!gesture) {\n            gesture = this.createGesture(handle, element);\n          }\n          gestures.push(gesture);\n        }\n      }\n    }\n\n    return gestures;\n  }\n}\n"]}