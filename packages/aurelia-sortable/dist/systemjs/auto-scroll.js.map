{"version":3,"sources":["../../src/auto-scroll.js"],"names":["transient","AutoScroll","rAFId","speed","active","start","update","element","dirX","dirY","frameCntX","frameCntY","cancelAnimationFrame","scrollDeltaX","scrollDeltaY","autoScroll","scrollLeft","scrollTop","requestAnimationFrame","end","cAF"],"mappings":";;;;;;;;;;;;;;;AAAQA,e,+BAAAA,S;;;4BAGKC,U,WADZD,W;;;;eAECE,K,GAAQ,CAAC,C;eACTC,K,GAAQ,E;eACRC,M,GAAS,K;;;6BAETC,K,oBAAkB;AAAA,cAAZF,KAAY,uEAAJ,EAAI;;AAChB,eAAKA,KAAL,GAAaA,KAAb;AACD,S;;6BACDG,M,mBAAOC,O,EAASC,I,EAAMC,I,EAAMC,S,EAAWC,S,EAAW;AAAA;;AAChD,cAAI,KAAKP,MAAT,EAAiB;AACf,gBAAII,SAAS,CAAT,IAAcC,SAAS,CAA3B,EAA8B;AAC5BG,mCAAqB,KAAKV,KAA1B;AACA,mBAAKE,MAAL,GAAc,KAAd;AACD;AACD;AACD;AACD,cAAII,SAAS,CAAT,IAAcC,SAAS,CAA3B,EAA8B;AAC5B;AACD;;AAED,cAAIC,cAAc,CAAd,IAAmBC,cAAc,CAArC,EAAwC;AACtC;AACD;;AAED,cAAME,eAAeL,OAAO,KAAKL,KAAjC;AACA,cAAMW,eAAeL,OAAO,KAAKN,KAAjC;;AAEA,cAAMY,aAAa,SAAbA,UAAa,GAAM;;AAEvB,gBAAK,CAAC,MAAKX,MAAX,EAAoB;AAClB;AACD;AACD,gBAAIM,YAAY,CAAhB,EAAmB;AACjBH,sBAAQS,UAAR,IAAsBH,YAAtB;AACD;AACD,gBAAIF,YAAY,CAAhB,EAAmB;AACjBJ,sBAAQU,SAAR,IAAqBH,YAArB;AACD;;AAED,cAAEJ,SAAF;AACA,cAAEC,SAAF;AACA,gBAAID,aAAa,CAAb,IAAkBC,aAAa,CAAnC,EAAsC;AACpC,oBAAKP,MAAL,GAAc,KAAd;AACA;AACD;;AAED,kBAAKF,KAAL,GAAagB,sBAAsBH,UAAtB,CAAb;AACD,WApBD;;AAsBA,eAAKX,MAAL,GAAc,IAAd;AACAW;AACD,S;;6BACDI,G,kBAAgC;AAAA,cAA5BC,GAA4B,uEAAtBR,oBAAsB;;AAC9BQ,cAAI,KAAKlB,KAAT;AACA,eAAKE,MAAL,GAAc,KAAd;AACD,S","file":"auto-scroll.js","sourcesContent":["import {transient} from \"aurelia-dependency-injection\";\n\n@transient()\nexport class AutoScroll {\n  rAFId = -1;\n  speed = 10;\n  active = false;\n\n  start(speed = 10) {\n    this.speed = speed;\n  }\n  update(element, dirX, dirY, frameCntX, frameCntY) {\n    if (this.active) {\n      if (dirX === 0 && dirY === 0) {\n        cancelAnimationFrame(this.rAFId);\n        this.active = false;\n      }\n      return;\n    }\n    if (dirX === 0 && dirY === 0) {\n      return;\n    }\n\n    if (frameCntX === 0 && frameCntY === 0) {\n      return;\n    }\n\n    const scrollDeltaX = dirX * this.speed;\n    const scrollDeltaY = dirY * this.speed;\n\n    const autoScroll = () => {\n\n      if ( !this.active ) {\n        return;\n      }\n      if (frameCntX > 0) {\n        element.scrollLeft += scrollDeltaX;\n      }\n      if (frameCntY > 0) {\n        element.scrollTop += scrollDeltaY;\n      }\n\n      --frameCntX;\n      --frameCntY;\n      if (frameCntX <= 0 && frameCntY <= 0) {\n        this.active = false;\n        return;\n      }\n\n      this.rAFId = requestAnimationFrame(autoScroll);\n    };\n\n    this.active = true;\n    autoScroll();\n  }\n  end(cAF = cancelAnimationFrame) {\n    cAF(this.rAFId);\n    this.active = false;\n  }\n}\n"]}