{"version":3,"sources":["../../src/drag.js"],"names":[],"mappings":";;AAAA,SAAQ,SAAR,QAAwB,8BAAxB;;AAGA,WAAa,eADZ,2BACM,MAAM,IAAN,CAAW;;SAChB,YAAY;SACZ,WAAW;SACX,OAAO,EAAE,MAAM,CAAN,EAAS,KAAK,CAAL,EAAQ,OAAO,CAAP,EAAU,QAAQ,CAAR;SACpC,UAAU;SACV,UAAU;GALM;;AAOhB,QAAM;AACJ,SAAK,IAAL,CAAU,YAAV,GAAyB,KAAK,YAAL,CADrB;AAEJ,SAAK,KAAL,GAAa,KAAK,OAAL,CAAa,SAAb,CAAuB,IAAvB,CAAb,CAFI;AAGJ,SAAK,KAAL,CAAW,KAAX,CAAiB,QAAjB,GAA4B,UAA5B,CAHI;AAIJ,SAAK,KAAL,CAAW,KAAX,CAAiB,KAAjB,GAAyB,KAAK,IAAL,CAAU,KAAV,GAAkB,IAAlB,CAJrB;AAKJ,SAAK,KAAL,CAAW,KAAX,CAAiB,MAAjB,GAA0B,KAAK,IAAL,CAAU,MAAV,GAAmB,IAAnB,CALtB;AAMJ,SAAK,KAAL,CAAW,KAAX,CAAiB,aAAjB,GAAiC,MAAjC,CANI;AAOJ,SAAK,KAAL,CAAW,KAAX,CAAiB,MAAjB,GAA0B,CAA1B,CAPI;AAQJ,SAAK,KAAL,CAAW,KAAX,CAAiB,MAAjB,GAA0B,KAAK,UAAL,CARtB;AASJ,aAAS,IAAT,CAAc,WAAd,CAA0B,KAAK,KAAL,CAA1B,CATI;GAAN;AAWA,UAAQ;AACN,SAAK,IAAL,CAAU,YAAV,GAAyB,EAAzB,CADM;AAEN,aAAS,IAAT,CAAc,WAAd,CAA0B,KAAK,KAAL,CAA1B,CAFM;AAGN,SAAK,KAAL,GAAa,IAAb,CAHM;GAAR;AAKA,eAAa;AACX,WAAO,KAAK,IAAL,CAAU,IAAV,GAAiB,KAAK,IAAL,CAAU,KAAV,GAAkB,CAAlB,CADb;GAAb;AAGA,eAAa;AACX,WAAO,KAAK,IAAL,CAAU,GAAV,GAAgB,KAAK,IAAL,CAAU,MAAV,GAAmB,CAAnB,CADZ;GAAb;AAGA,QAAM,OAAN,EAAe,IAAf,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,cAA3B,EAA2C,UAA3C,EAAuD,SAAvD,EAAkE,UAAlE,EAA8E,IAA9E,EAAoF,YAApF,EAAkG,OAAlG,EAA2G,OAA3G,EAAoH,OAApH,EAA6H,OAA7H,EAAsI;AACpI,SAAK,OAAL,GAAe,OAAf,CADoI;AAEpI,SAAK,IAAL,GAAY,IAAZ,CAFoI;AAGpI,SAAK,YAAL,GAAoB,YAApB,CAHoI;AAIpI,SAAK,UAAL,GAAkB,UAAlB,CAJoI;AAKpI,UAAM,OAAQ,KAAK,IAAL,GAAY,QAAQ,qBAAR,EAAZ,CALsH;;AAOpI,SAAK,SAAL,GAAiB,KAAK,IAAL,CAPmH;AAQpI,SAAK,QAAL,GAAgB,KAAK,GAAL,CARoH;;AAUpI,SAAK,OAAL,GAAe,KAAK,SAAL,GAAiB,CAAjB,CAVqH;AAWpI,SAAK,OAAL,GAAe,KAAK,QAAL,GAAgB,CAAhB,CAXqH;;AAapI,SAAK,GAAL,GAboI;;AAepI,SAAK,MAAL,CAAY,CAAZ,EAAe,CAAf,EAAkB,cAAlB,EAAkC,UAAlC,EAA8C,SAA9C,EAAyD,IAAzD,EAA+D,OAA/D,EAAwE,OAAxE,EAAiF,OAAjF,EAA0F,OAA1F,EAfoI;GAAtI;AAiBA,SAAO,CAAP,EAAU,CAAV,EAAa,cAAb,EAA6B,UAA7B,EAAyC,SAAzC,EAAoD,IAApD,EAA0D,OAA1D,EAAmE,OAAnE,EAA4E,OAA5E,EAAqF,OAArF,EAA8F;AAC5F,SAAK,KAAK,OAAL,CADuF;AAE5F,SAAK,KAAK,OAAL,CAFuF;AAG5F,QAAI,cAAJ,EAAoB;AAClB,WAAK,UAAL,CADkB;AAElB,WAAK,SAAL,CAFkB;KAApB;;AAKA,QAAI,IAAI,OAAJ,EAAa;AACf,UAAI,OAAJ,CADe;KAAjB;AAGA,QAAI,IAAI,UAAU,KAAK,IAAL,CAAU,KAAV,EAAiB;AACjC,UAAI,UAAU,KAAK,IAAL,CAAU,KAAV,CADmB;KAAnC;;AAIA,QAAI,IAAI,OAAJ,EAAa;AACf,UAAI,OAAJ,CADe;KAAjB;AAGA,QAAI,IAAI,UAAU,KAAK,IAAL,CAAU,MAAV,EAAkB;AAClC,UAAI,UAAU,KAAK,IAAL,CAAU,MAAV,CADoB;KAApC;;AAIA,YAAQ,IAAR;AACA,WAAK,GAAL;AACE,YAAI,KAAK,QAAL,CADN;AAEE,cAFF;AADA,WAIK,GAAL;AACE,YAAI,KAAK,SAAL,CADN;AAEE,cAFF;AAJA,KAtB4F;;AA+B5F,SAAK,KAAL,CAAW,KAAX,CAAiB,IAAjB,GAAwB,IAAI,IAAJ,CA/BoE;AAgC5F,SAAK,KAAL,CAAW,KAAX,CAAiB,GAAjB,GAAuB,IAAI,IAAJ,CAhCqE;GAA9F;AAkCA,QAAM;AACJ,QAAI,KAAK,OAAL,KAAiB,IAAjB,EAAuB;AACzB,aADyB;KAA3B;AAGA,SAAK,KAAL,GAJI;AAKJ,SAAK,OAAL,GAAe,IAAf,CALI;AAMJ,SAAK,IAAL,GAAY,IAAZ,CANI;GAAN;CAhFK,aAAP","file":"drag.js","sourcesContent":["import {transient} from \"aurelia-dependency-injection\";\n\n@transient()\nexport class Drag {\n  startLeft = 0;\n  startTop = 0;\n  rect = { left: 0, top: 0, width: 0, height: 0 };\n  offsetX = 0;\n  offsetY = 0;\n\n  pin() {\n    this.item.sortingClass = this.sortingClass;\n    this.clone = this.element.cloneNode(true);\n    this.clone.style.position = \"absolute\";\n    this.clone.style.width = this.rect.width + \"px\";\n    this.clone.style.height = this.rect.height + \"px\";\n    this.clone.style.pointerEvents = \"none\";\n    this.clone.style.margin = 0;\n    this.clone.style.zIndex = this.dragZIndex;\n    document.body.appendChild(this.clone);\n  }\n  unpin() {\n    this.item.sortingClass = \"\";\n    document.body.removeChild(this.clone);\n    this.clone = null;\n  }\n  getCenterX() {\n    return this.rect.left + this.rect.width / 2;\n  }\n  getCenterY() {\n    return this.rect.top + this.rect.height / 2;\n  }\n  start(element, item, x, y, viewportScroll, scrollLeft, scrollTop, dragZIndex, axis, sortingClass, minPosX, maxPosX, minPosY, maxPosY) {\n    this.element = element;\n    this.item = item;\n    this.sortingClass = sortingClass;\n    this.dragZIndex = dragZIndex;\n    const rect = (this.rect = element.getBoundingClientRect());\n\n    this.startLeft = rect.left;\n    this.startTop = rect.top;\n\n    this.offsetX = this.startLeft - x;\n    this.offsetY = this.startTop - y;\n\n    this.pin();\n\n    this.update(x, y, viewportScroll, scrollLeft, scrollTop, axis, minPosX, maxPosX, minPosY, maxPosY);\n  }\n  update(x, y, viewportScroll, scrollLeft, scrollTop, axis, minPosX, maxPosX, minPosY, maxPosY) {\n    x += this.offsetX;\n    y += this.offsetY;\n    if (viewportScroll) {\n      x += scrollLeft;\n      y += scrollTop;\n    }\n\n    if (x < minPosX) {\n      x = minPosX;\n    }\n    if (x > maxPosX - this.rect.width) {\n      x = maxPosX - this.rect.width;\n    }\n\n    if (y < minPosY) {\n      y = minPosY;\n    }\n    if (y > maxPosY - this.rect.height) {\n      y = maxPosY - this.rect.height;\n    }\n\n    switch (axis) {\n    case \"x\":\n      y = this.startTop;\n      break;\n    case \"y\":\n      x = this.startLeft;\n      break;\n    }\n\n    this.clone.style.left = x + \"px\";\n    this.clone.style.top = y + \"px\";\n  }\n  end() {\n    if (this.element === null) {\n      return;\n    }\n    this.unpin();\n    this.element = null;\n    this.item = null;\n  }\n}\n"]}